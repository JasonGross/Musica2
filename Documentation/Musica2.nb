(************** Content-type: application/mathematica **************
                     CreatedBy='Mathematica 5.0'

                    Mathematica-Compatible Notebook

This notebook can be used with any Mathematica-compatible
application, such as Mathematica, MathReader or Publicon. The data
for the notebook starts with the line containing stars above.

To get the notebook into a Mathematica-compatible application, do
one of the following:

* Save the data starting with the line of stars above into a file
  with a name ending in .nb, then open the file inside the
  application;

* Copy the data starting with the line of stars above to the
  clipboard, then use the Paste menu command inside the application.

Data for notebooks contains only printable 7-bit ASCII and can be
sent directly in email or through ftp in text mode.  Newlines can be
CR, LF or CRLF (Unix, Macintosh or MS-DOS style).

NOTE: If you modify the data for this notebook not in a Mathematica-
compatible application, you must delete the line below containing
the word CacheID, otherwise Mathematica-compatible applications may
try to use invalid cache data.

For more information on notebooks and Mathematica-compatible 
applications, contact Wolfram Research:
  web: http://www.wolfram.com
  email: info@wolfram.com
  phone: +1-217-398-0700 (U.S.)

Notebook reader applications are available free of charge from 
Wolfram Research.
*******************************************************************)

(*CacheID: 232*)


(*NotebookFileLineBreakTest
NotebookFileLineBreakTest*)
(*NotebookOptionsPosition[     10013,        346]*)
(*NotebookOutlinePosition[     10728,        371]*)
(*  CellTagsIndexPosition[     10684,        367]*)
(*WindowFrame->Normal*)



Notebook[{

Cell[CellGroupData[{
Cell["Musica2", "Title"],

Cell["Documentation on the Musica2 package.", "Text"],

Cell[CellGroupData[{

Cell["Licence", "Subtitle"],

Cell["\<\
Copyright (C) 2004 Bo C. Herlin

This program is free software;you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation;either version 2
of the License,or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY;without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program;if not,write to the Free Software Foundation,
Inc.,59 Temple Place-Suite 330,Boston,MA 02111-1307,USA.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["History", "Subtitle"],

Cell["\<\
2004-09-15 Bo C. Herlin : major rewrite, started using up-values \
and a kind of template for types
2004-09-14 Bo C. Herlin : added Patterns section
2004-09-13 Bo C. Herlin : added some use of Chord's and Melody's
2004-09-12 Bo C. Herlin : added use of Common.m's Duration/Info-things
2004-09-11 Bo C. Herlin : added use of Note.m's Chord- and Melody-types
2004-09-02 Bo C. Herlin : changed all MidiData*Value* to Data*Value* and \
MidiTie to DataTie, and all *Voice* to *Melody*
2004-08-23 Bo C. Herlin : i dont remeber, i dont recall 
2004-08-19 Bo C. Herlin : moved MidiPlay to a package of its own
2004-08-17 Bo C. Herlin : added Midi(Add|Get|Rem|Set)(Chords|Voices), \
modified MidiToSound and added MidiPlay, added MidiOfSilence and \
MidiPitchShift
2004-08-15 Bo C. Herlin : dropped the voice-nr from shape voice and chord, \
renamed MidiAddEOT to MidiFixEOT and MidiNormalizeNoteOff to MidiFixNoteOff
2004-08-14 Bo C. Herlin : added MidiSeq and MidiPar
2004-08-13 Bo C. Herlin : yet another rest/tie scheme, now with \
MidiDataAnyValue and MidiDataNoValue, MidiRest* is removed
2004-08-13 Bo C. Herlin : added Midi(Add|Get|Rem|Set)(Notes|QPM), enamed \
MidiEqualizeEOT to MidiAddEOT
2004-08-11 Bo C. Herlin : added SoundSetDuration to be used in MidiToSound
2004-08-10 Bo C. Herlin : removed call to MidiAddEOT, added SoundPitchShift
2004-08-09 Bo C. Herlin : minor changes to reflect the code. 
2004-08-08 Bo C. Herlin : added this new state-thing 
2004-08-04 Bo C. Herlin : first release
2004-07-28 Bo C. Herlin : created\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Welcome", "Subtitle"],

Cell["\<\
Hi there! Welcome to Musica2. 
This is a randomly created notebook that sometimes also works as a testbench \
when I extend Musica2. I try to make everything in this notebook to work in \
every release, and even in the CVS at sourceforge.net.
If You find errors, please tell me about them.
If You miss anything, please tell me about it.
If You would like something changed, please tell me what it is.
If You have a contribution, please send it to me.
If You... I think You got the idea now...
Mail me at bo@gcab.net, or even better, post a message to a forum at \
http://sourceforge.net/forum/?group_id=90149.
And above all; Have Fun!\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Init", "Subtitle"],

Cell["\<\
A small example below uses a tiny part of the Audio package when \
creating a triangle sound.\
\>", "Text"],

Cell[BoxData[
    \(<< Graphics`Colors`\)], "Input",
  InitializationCell->True],

Cell["Im using some colors.", "Text"],

Cell[BoxData[
    \(<< Miscellaneous`Audio`\)], "Input",
  InitializationCell->True],

Cell["\<\
Load Musica2 which in turn will load each sub-package when \
needed.\
\>", "Text"],

Cell[BoxData[
    \(<< Musica2`\)], "Input",
  InitializationCell->True],

Cell["Set DataFolder to the folder containing the testfiles.", "Text"],

Cell[BoxData[
    \(\(DataFolder = "\<Musica2/Documentation/Data/\>";\)\)], "Input",
  InitializationCell->True],

Cell[BoxData[
    \(\(\(\(cor := DataFolder <> "\<cor.mid\>"\) \)\(;\)\( (*\ 2.9  kb, \ 
      J . S . Bach, \ bwv\ 323, \ choral, \ Holy, \ 
      holy, \ \(\(holy\)\(.\)\)\ *) \)\(\[IndentingNewLine]\)\(\(fug := 
        DataFolder <> "\<fug.mid\>"\) \)\(;\)\( (*\ 6.1  kb, \ 
      J . S . Bach, \ bwv\ 846  b, \ fugue\ 1\ in\ C\ major, \ 
      wtc1\ *) \)\(\[IndentingNewLine]\)\(\(cun := 
        DataFolder <> "\<cun.mid\>"\) \)\(;\)\( (*\ 6.4  kb, \ 
      J . S . Bach, \ bwv\ 1080  a, \ contrapunctus\ 1, \ 
      cunst\ die\ fugue\ *) \)\(\[IndentingNewLine]\)\(\(pre := 
        DataFolder <> "\<pre.mid\>"\) \)\(;\)\( (*\ 8.9  kb, \ 
      J . S . Bach, \ bwv\ 847  a, \ preludium\ 2\ in\ C\ minor, \ 
      wtc1\ *) \)\)\)], "Input",
  InitializationCell->True],

Cell["Set MidiTestFile to the file to apply the tests to.", "Text"],

Cell[BoxData[{
    \(\(MidiTestFile := cor;\)\), "\[IndentingNewLine]", 
    \(\(MidiTestFileList := {cor, fug, cun, pre};\)\)}], "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Mini-tour of Musica2", "Subtitle"],

Cell["Read from a SMF (StandardMidiFile).", "Text"],

Cell[BoxData[
    \(m = Import[MidiTestFile, Midi]\)], "Input"],

Cell["Get the info from the Midi.", "Text"],

Cell[BoxData[
    \(Info[m]\)], "Input"],

Cell["Get nr of tracks.", "Text"],

Cell[BoxData[
    \(Length[m]\)], "Input"],

Cell["Get the duration in ticks.", "Text"],

Cell[BoxData[
    \(Duration[m]\)], "Input"],

Cell["Get the duration in seconds.", "Text"],

Cell[BoxData[
    \(Duration[Midi[m, TimeUnit \[Rule] Second]] // N\)], "Input"],

Cell["\<\
Play it. Currently it takes about 24 sec to create the \
sound-objects, mix it and render it in stereo on my 1GHz laptop.\
\>", "Text"],

Cell[BoxData[
    \(Timing[Show[m]]\)], "Input"],

Cell["Write to a SMF.", "Text"],

Cell[BoxData[
    \(Export["\<tmp.mid\>", m]\)], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Note", "Subtitle"],

Cell["todo", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Midi", "Subtitle"],

Cell["todo", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sound", "Subtitle"],

Cell["todo", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Patterns (as in design)", "Subtitle"],

Cell["\<\
There are currently three \"domains\":
  1: Midi, with subtype Track with subtype Event
  2: Progression with subtype Chord with subtype Note, and Counterpoint with \
subtype Melody with subtype Note
  3: Sound with subtype Snippet\
\>", "Text"],

Cell["\<\
Progression, Counterpoint, Melody, Chord and Note does not have any \
information or data concerning track-nr or channel-nr which are \
Midi-specific.\
\>", "Text"],

Cell["\<\
Each type T has default-values in its Options:
  Options[T]\
\>", "Text"],

Cell["\<\
Each type T has functions for retrieving info and \"raw\" data:
  Info[x_T]
  Data[x_T]\
\>", "Text"],

Cell["\<\
Each type T has a test function for the whole type:
  TypeQ[T]
and one for the data:
  DataQ[T]\
\>", "Text"],

Cell["\<\
Each type T has a \"constructor\" that takes the output from Info \
and Data as input:
  T[Data[x], Sequence@@Info[x]]
  T[d_?(DataQ[T]),opts___?OptionQ]
(And sometimes versions that takes \"simplified data\" where the omitted data \
is taken from Options[X])\
\>", "Text"],

Cell["\<\
Most types T has a Duration-function:
  Duration[x_T]\
\>", "Text"],

Cell["\<\
Each type T with a subtype has functions like:
  SubType[T]
  SubType[x_T]\
\>", "Text"],

Cell["\<\
Each type T that contains a subtype ST has \"constructors\" like:
  T[{y__?(TypeQ[ST])},opts___?OptionQ]
  T[y_?(TypeQ[ST]),opts___?OptionQ]
and a \"constructor\" for its subtype:
  ST[x_T]\
\>", "Text"],

Cell["\<\
Each type T that contains a subtype ST has upvalues for functions \
like:
  Append[x_T, y_?(TypeQ[ST])]
  Delete[x_T, n__]
  Drop[x_T, n_]
  Extract[x_T, n_Integer]
  First[x_T]
  Insert[x_T, y_?(TypeQ[ST]), n_Integer]
  Last[x_T]
  Length[x_T]
  Map[f_, x_T]
  MapIndexed[f_, x_T]
  Most[x_T]
  Part[x_T, n_Integer]
  Prepend[x_T, y_?(TypeQ[ST])]
  ReplacePart[x_T, y_?(TypeQ[ST]), n_Integer]
  Rest[x_T]
  Scan[f_, x_T]
  Select[x_T, f_]
  Take[x_T, n_]
Unfortunately I havent found a way yet to trap and set an upvalue for an \
expression like x[[n]]=expr.\
\>", "Text"]
}, Open  ]]
}, Open  ]]
},
FrontEndVersion->"5.0 for X",
ScreenRectangle->{{0, 1600}, {0, 1200}},
AutoGeneratedPackage->Automatic,
WindowSize->{1028, 958},
WindowMargins->{{0, Automatic}, {31, Automatic}},
Magnification->1,
StyleDefinitions -> "Default.nb"
]

(*******************************************************************
Cached data follows.  If you edit this Notebook file directly, not
using Mathematica, you must remove the line containing CacheID at
the top of  the file.  The cache data will then be recreated when
you save this file from within Mathematica.
*******************************************************************)

(*CellTagsOutline
CellTagsIndex->{}
*)

(*CellTagsIndex
CellTagsIndex->{}
*)

(*NotebookFileOutline
Notebook[{

Cell[CellGroupData[{
Cell[1776, 53, 24, 0, 96, "Title"],
Cell[1803, 55, 53, 0, 32, "Text"],

Cell[CellGroupData[{
Cell[1881, 59, 27, 0, 51, "Subtitle"],
Cell[1911, 61, 720, 16, 284, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[2668, 82, 27, 0, 53, "Subtitle"],
Cell[2698, 84, 1555, 27, 356, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[4290, 116, 27, 0, 53, "Subtitle"],
Cell[4320, 118, 658, 13, 194, "Text"]
}, Closed]],

Cell[CellGroupData[{
Cell[5015, 136, 24, 0, 53, "Subtitle"],
Cell[5042, 138, 117, 3, 32, "Text"],
Cell[5162, 143, 80, 2, 27, "Input",
  InitializationCell->True],
Cell[5245, 147, 37, 0, 32, "Text"],
Cell[5285, 149, 84, 2, 27, "Input",
  InitializationCell->True],
Cell[5372, 153, 92, 3, 32, "Text"],
Cell[5467, 158, 72, 2, 27, "Input",
  InitializationCell->True],
Cell[5542, 162, 70, 0, 32, "Text"],
Cell[5615, 164, 112, 2, 27, "Input",
  InitializationCell->True],
Cell[5730, 168, 775, 13, 75, "Input",
  InitializationCell->True],
Cell[6508, 183, 67, 0, 32, "Text"],
Cell[6578, 185, 166, 3, 43, "Input",
  InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{
Cell[6781, 193, 40, 0, 53, "Subtitle"],
Cell[6824, 195, 51, 0, 32, "Text"],
Cell[6878, 197, 63, 1, 27, "Input"],
Cell[6944, 200, 43, 0, 32, "Text"],
Cell[6990, 202, 40, 1, 27, "Input"],
Cell[7033, 205, 33, 0, 32, "Text"],
Cell[7069, 207, 42, 1, 27, "Input"],
Cell[7114, 210, 42, 0, 32, "Text"],
Cell[7159, 212, 44, 1, 27, "Input"],
Cell[7206, 215, 44, 0, 32, "Text"],
Cell[7253, 217, 80, 1, 27, "Input"],
Cell[7336, 220, 145, 3, 32, "Text"],
Cell[7484, 225, 48, 1, 27, "Input"],
Cell[7535, 228, 31, 0, 32, "Text"],
Cell[7569, 230, 57, 1, 27, "Input"]
}, Open  ]],

Cell[CellGroupData[{
Cell[7663, 236, 24, 0, 51, "Subtitle"],
Cell[7690, 238, 20, 0, 32, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[7747, 243, 24, 0, 51, "Subtitle"],
Cell[7774, 245, 20, 0, 32, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[7831, 250, 25, 0, 51, "Subtitle"],
Cell[7859, 252, 20, 0, 32, "Text"]
}, Open  ]],

Cell[CellGroupData[{
Cell[7916, 257, 43, 0, 51, "Subtitle"],
Cell[7962, 259, 255, 6, 86, "Text"],
Cell[8220, 267, 174, 4, 32, "Text"],
Cell[8397, 273, 83, 3, 50, "Text"],
Cell[8483, 278, 111, 4, 68, "Text"],
Cell[8597, 284, 119, 5, 86, "Text"],
Cell[8719, 291, 283, 7, 86, "Text"],
Cell[9005, 300, 77, 3, 50, "Text"],
Cell[9085, 305, 98, 4, 68, "Text"],
Cell[9186, 311, 213, 6, 104, "Text"],
Cell[9402, 319, 583, 23, 374, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)



(*******************************************************************
End of Mathematica Notebook file.
*******************************************************************)

